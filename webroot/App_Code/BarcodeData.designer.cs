#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="MCOS")]
public partial class BarcodeDataDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertMenuItem(MenuItem instance);
  partial void UpdateMenuItem(MenuItem instance);
  partial void DeleteMenuItem(MenuItem instance);
  partial void InsertOrderDetail(OrderDetail instance);
  partial void UpdateOrderDetail(OrderDetail instance);
  partial void DeleteOrderDetail(OrderDetail instance);
  partial void InsertMember(Member instance);
  partial void UpdateMember(Member instance);
  partial void DeleteMember(Member instance);
  partial void InsertFamily(Family instance);
  partial void UpdateFamily(Family instance);
  partial void DeleteFamily(Family instance);
  partial void InsertDepositHistory(DepositHistory instance);
  partial void UpdateDepositHistory(DepositHistory instance);
  partial void DeleteDepositHistory(DepositHistory instance);
  partial void InsertOrder(Order instance);
  partial void UpdateOrder(Order instance);
  partial void DeleteOrder(Order instance);
  #endregion
	
	public BarcodeDataDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["MCOSConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public BarcodeDataDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public BarcodeDataDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public BarcodeDataDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public BarcodeDataDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<MenuItem> MenuItems
	{
		get
		{
			return this.GetTable<MenuItem>();
		}
	}
	
	public System.Data.Linq.Table<OrderDetail> OrderDetails
	{
		get
		{
			return this.GetTable<OrderDetail>();
		}
	}
	
	public System.Data.Linq.Table<Member> Members
	{
		get
		{
			return this.GetTable<Member>();
		}
	}
	
	public System.Data.Linq.Table<Family> Families
	{
		get
		{
			return this.GetTable<Family>();
		}
	}
	
	public System.Data.Linq.Table<Param> Params
	{
		get
		{
			return this.GetTable<Param>();
		}
	}
	
	public System.Data.Linq.Table<DepositHistory> DepositHistories
	{
		get
		{
			return this.GetTable<DepositHistory>();
		}
	}
	
	public System.Data.Linq.Table<Order> Orders
	{
		get
		{
			return this.GetTable<Order>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MenuItem")]
public partial class MenuItem : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ItemID;
	
	private System.Nullable<System.DateTime> _ItemStartDate;
	
	private System.Nullable<System.DateTime> _ItemEndDate;
	
	private System.Nullable<decimal> _ItemPrice;
	
	private string _Itemcode;
	
	private string _ItemDescription;
	
	private System.Nullable<System.DateTime> _CREATE_DATE;
	
	private System.Nullable<System.DateTime> _UPDATE_DATE;
	
	private EntitySet<OrderDetail> _OrderDetails;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemIDChanging(int value);
    partial void OnItemIDChanged();
    partial void OnItemStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnItemStartDateChanged();
    partial void OnItemEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnItemEndDateChanged();
    partial void OnItemPriceChanging(System.Nullable<decimal> value);
    partial void OnItemPriceChanged();
    partial void OnItemcodeChanging(string value);
    partial void OnItemcodeChanged();
    partial void OnItemDescriptionChanging(string value);
    partial void OnItemDescriptionChanged();
    partial void OnCREATE_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnCREATE_DATEChanged();
    partial void OnUPDATE_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnUPDATE_DATEChanged();
    #endregion
	
	public MenuItem()
	{
		this._OrderDetails = new EntitySet<OrderDetail>(new Action<OrderDetail>(this.attach_OrderDetails), new Action<OrderDetail>(this.detach_OrderDetails));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ItemID
	{
		get
		{
			return this._ItemID;
		}
		set
		{
			if ((this._ItemID != value))
			{
				this.OnItemIDChanging(value);
				this.SendPropertyChanging();
				this._ItemID = value;
				this.SendPropertyChanged("ItemID");
				this.OnItemIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemStartDate", DbType="Date")]
	public System.Nullable<System.DateTime> ItemStartDate
	{
		get
		{
			return this._ItemStartDate;
		}
		set
		{
			if ((this._ItemStartDate != value))
			{
				this.OnItemStartDateChanging(value);
				this.SendPropertyChanging();
				this._ItemStartDate = value;
				this.SendPropertyChanged("ItemStartDate");
				this.OnItemStartDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemEndDate", DbType="Date")]
	public System.Nullable<System.DateTime> ItemEndDate
	{
		get
		{
			return this._ItemEndDate;
		}
		set
		{
			if ((this._ItemEndDate != value))
			{
				this.OnItemEndDateChanging(value);
				this.SendPropertyChanging();
				this._ItemEndDate = value;
				this.SendPropertyChanged("ItemEndDate");
				this.OnItemEndDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemPrice", DbType="Decimal(8,2)")]
	public System.Nullable<decimal> ItemPrice
	{
		get
		{
			return this._ItemPrice;
		}
		set
		{
			if ((this._ItemPrice != value))
			{
				this.OnItemPriceChanging(value);
				this.SendPropertyChanging();
				this._ItemPrice = value;
				this.SendPropertyChanged("ItemPrice");
				this.OnItemPriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Itemcode", DbType="NVarChar(50)")]
	public string Itemcode
	{
		get
		{
			return this._Itemcode;
		}
		set
		{
			if ((this._Itemcode != value))
			{
				this.OnItemcodeChanging(value);
				this.SendPropertyChanging();
				this._Itemcode = value;
				this.SendPropertyChanged("Itemcode");
				this.OnItemcodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemDescription", DbType="NVarChar(50)")]
	public string ItemDescription
	{
		get
		{
			return this._ItemDescription;
		}
		set
		{
			if ((this._ItemDescription != value))
			{
				this.OnItemDescriptionChanging(value);
				this.SendPropertyChanging();
				this._ItemDescription = value;
				this.SendPropertyChanged("ItemDescription");
				this.OnItemDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATE_DATE", DbType="DateTime")]
	public System.Nullable<System.DateTime> CREATE_DATE
	{
		get
		{
			return this._CREATE_DATE;
		}
		set
		{
			if ((this._CREATE_DATE != value))
			{
				this.OnCREATE_DATEChanging(value);
				this.SendPropertyChanging();
				this._CREATE_DATE = value;
				this.SendPropertyChanged("CREATE_DATE");
				this.OnCREATE_DATEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UPDATE_DATE", DbType="DateTime")]
	public System.Nullable<System.DateTime> UPDATE_DATE
	{
		get
		{
			return this._UPDATE_DATE;
		}
		set
		{
			if ((this._UPDATE_DATE != value))
			{
				this.OnUPDATE_DATEChanging(value);
				this.SendPropertyChanging();
				this._UPDATE_DATE = value;
				this.SendPropertyChanged("UPDATE_DATE");
				this.OnUPDATE_DATEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MenuItem_OrderDetail", Storage="_OrderDetails", ThisKey="ItemID", OtherKey="ItemID")]
	public EntitySet<OrderDetail> OrderDetails
	{
		get
		{
			return this._OrderDetails;
		}
		set
		{
			this._OrderDetails.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_OrderDetails(OrderDetail entity)
	{
		this.SendPropertyChanging();
		entity.MenuItem = this;
	}
	
	private void detach_OrderDetails(OrderDetail entity)
	{
		this.SendPropertyChanging();
		entity.MenuItem = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderDetail")]
public partial class OrderDetail : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _OrderDetailID;
	
	private int _OrderID;
	
	private int _ItemID;
	
	private System.Nullable<int> _ItemQuantity;
	
	private EntityRef<MenuItem> _MenuItem;
	
	private EntityRef<Order> _Order;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderDetailIDChanging(int value);
    partial void OnOrderDetailIDChanged();
    partial void OnOrderIDChanging(int value);
    partial void OnOrderIDChanged();
    partial void OnItemIDChanging(int value);
    partial void OnItemIDChanged();
    partial void OnItemQuantityChanging(System.Nullable<int> value);
    partial void OnItemQuantityChanged();
    #endregion
	
	public OrderDetail()
	{
		this._MenuItem = default(EntityRef<MenuItem>);
		this._Order = default(EntityRef<Order>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderDetailID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int OrderDetailID
	{
		get
		{
			return this._OrderDetailID;
		}
		set
		{
			if ((this._OrderDetailID != value))
			{
				this.OnOrderDetailIDChanging(value);
				this.SendPropertyChanging();
				this._OrderDetailID = value;
				this.SendPropertyChanged("OrderDetailID");
				this.OnOrderDetailIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="Int NOT NULL")]
	public int OrderID
	{
		get
		{
			return this._OrderID;
		}
		set
		{
			if ((this._OrderID != value))
			{
				if (this._Order.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnOrderIDChanging(value);
				this.SendPropertyChanging();
				this._OrderID = value;
				this.SendPropertyChanged("OrderID");
				this.OnOrderIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", DbType="Int NOT NULL")]
	public int ItemID
	{
		get
		{
			return this._ItemID;
		}
		set
		{
			if ((this._ItemID != value))
			{
				if (this._MenuItem.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnItemIDChanging(value);
				this.SendPropertyChanging();
				this._ItemID = value;
				this.SendPropertyChanged("ItemID");
				this.OnItemIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemQuantity", DbType="Int")]
	public System.Nullable<int> ItemQuantity
	{
		get
		{
			return this._ItemQuantity;
		}
		set
		{
			if ((this._ItemQuantity != value))
			{
				this.OnItemQuantityChanging(value);
				this.SendPropertyChanging();
				this._ItemQuantity = value;
				this.SendPropertyChanged("ItemQuantity");
				this.OnItemQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MenuItem_OrderDetail", Storage="_MenuItem", ThisKey="ItemID", OtherKey="ItemID", IsForeignKey=true)]
	public MenuItem MenuItem
	{
		get
		{
			return this._MenuItem.Entity;
		}
		set
		{
			MenuItem previousValue = this._MenuItem.Entity;
			if (((previousValue != value) 
						|| (this._MenuItem.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._MenuItem.Entity = null;
					previousValue.OrderDetails.Remove(this);
				}
				this._MenuItem.Entity = value;
				if ((value != null))
				{
					value.OrderDetails.Add(this);
					this._ItemID = value.ItemID;
				}
				else
				{
					this._ItemID = default(int);
				}
				this.SendPropertyChanged("MenuItem");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_OrderDetail", Storage="_Order", ThisKey="OrderID", OtherKey="OrderID", IsForeignKey=true)]
	public Order Order
	{
		get
		{
			return this._Order.Entity;
		}
		set
		{
			Order previousValue = this._Order.Entity;
			if (((previousValue != value) 
						|| (this._Order.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Order.Entity = null;
					previousValue.OrderDetails.Remove(this);
				}
				this._Order.Entity = value;
				if ((value != null))
				{
					value.OrderDetails.Add(this);
					this._OrderID = value.OrderID;
				}
				else
				{
					this._OrderID = default(int);
				}
				this.SendPropertyChanged("Order");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Member")]
public partial class Member : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _MEMBER_ID;
	
	private string _MemberCode;
	
	private System.Nullable<int> _FAMILY_ID;
	
	private string _CHINESE_NAME;
	
	private string _LAST_NAME;
	
	private string _FIRST_NAME;
	
	private string _CELL_PHONE;
	
	private string _EMAIL;
	
	private System.Nullable<System.DateTime> _CREATE_DATE;
	
	private System.Nullable<System.DateTime> _UPDATE_DATE;
	
	private EntitySet<Order> _Orders;
	
	private EntityRef<Family> _Family;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMEMBER_IDChanging(int value);
    partial void OnMEMBER_IDChanged();
    partial void OnMemberCodeChanging(string value);
    partial void OnMemberCodeChanged();
    partial void OnFAMILY_IDChanging(System.Nullable<int> value);
    partial void OnFAMILY_IDChanged();
    partial void OnCHINESE_NAMEChanging(string value);
    partial void OnCHINESE_NAMEChanged();
    partial void OnLAST_NAMEChanging(string value);
    partial void OnLAST_NAMEChanged();
    partial void OnFIRST_NAMEChanging(string value);
    partial void OnFIRST_NAMEChanged();
    partial void OnCELL_PHONEChanging(string value);
    partial void OnCELL_PHONEChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    partial void OnCREATE_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnCREATE_DATEChanged();
    partial void OnUPDATE_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnUPDATE_DATEChanged();
    #endregion
	
	public Member()
	{
		this._Orders = new EntitySet<Order>(new Action<Order>(this.attach_Orders), new Action<Order>(this.detach_Orders));
		this._Family = default(EntityRef<Family>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MEMBER_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int MEMBER_ID
	{
		get
		{
			return this._MEMBER_ID;
		}
		set
		{
			if ((this._MEMBER_ID != value))
			{
				this.OnMEMBER_IDChanging(value);
				this.SendPropertyChanging();
				this._MEMBER_ID = value;
				this.SendPropertyChanged("MEMBER_ID");
				this.OnMEMBER_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
	public string MemberCode
	{
		get
		{
			return this._MemberCode;
		}
		set
		{
			if ((this._MemberCode != value))
			{
				this.OnMemberCodeChanging(value);
				this.SendPropertyChanging();
				this._MemberCode = value;
				this.SendPropertyChanged("MemberCode");
				this.OnMemberCodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FAMILY_ID", DbType="Int")]
	public System.Nullable<int> FAMILY_ID
	{
		get
		{
			return this._FAMILY_ID;
		}
		set
		{
			if ((this._FAMILY_ID != value))
			{
				if (this._Family.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnFAMILY_IDChanging(value);
				this.SendPropertyChanging();
				this._FAMILY_ID = value;
				this.SendPropertyChanged("FAMILY_ID");
				this.OnFAMILY_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHINESE_NAME", DbType="NVarChar(20)")]
	public string CHINESE_NAME
	{
		get
		{
			return this._CHINESE_NAME;
		}
		set
		{
			if ((this._CHINESE_NAME != value))
			{
				this.OnCHINESE_NAMEChanging(value);
				this.SendPropertyChanging();
				this._CHINESE_NAME = value;
				this.SendPropertyChanged("CHINESE_NAME");
				this.OnCHINESE_NAMEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LAST_NAME", DbType="NVarChar(80)")]
	public string LAST_NAME
	{
		get
		{
			return this._LAST_NAME;
		}
		set
		{
			if ((this._LAST_NAME != value))
			{
				this.OnLAST_NAMEChanging(value);
				this.SendPropertyChanging();
				this._LAST_NAME = value;
				this.SendPropertyChanged("LAST_NAME");
				this.OnLAST_NAMEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FIRST_NAME", DbType="NVarChar(80)")]
	public string FIRST_NAME
	{
		get
		{
			return this._FIRST_NAME;
		}
		set
		{
			if ((this._FIRST_NAME != value))
			{
				this.OnFIRST_NAMEChanging(value);
				this.SendPropertyChanging();
				this._FIRST_NAME = value;
				this.SendPropertyChanged("FIRST_NAME");
				this.OnFIRST_NAMEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CELL_PHONE", DbType="VarChar(50)")]
	public string CELL_PHONE
	{
		get
		{
			return this._CELL_PHONE;
		}
		set
		{
			if ((this._CELL_PHONE != value))
			{
				this.OnCELL_PHONEChanging(value);
				this.SendPropertyChanging();
				this._CELL_PHONE = value;
				this.SendPropertyChanged("CELL_PHONE");
				this.OnCELL_PHONEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="VarChar(80)")]
	public string EMAIL
	{
		get
		{
			return this._EMAIL;
		}
		set
		{
			if ((this._EMAIL != value))
			{
				this.OnEMAILChanging(value);
				this.SendPropertyChanging();
				this._EMAIL = value;
				this.SendPropertyChanged("EMAIL");
				this.OnEMAILChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATE_DATE", DbType="DateTime")]
	public System.Nullable<System.DateTime> CREATE_DATE
	{
		get
		{
			return this._CREATE_DATE;
		}
		set
		{
			if ((this._CREATE_DATE != value))
			{
				this.OnCREATE_DATEChanging(value);
				this.SendPropertyChanging();
				this._CREATE_DATE = value;
				this.SendPropertyChanged("CREATE_DATE");
				this.OnCREATE_DATEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UPDATE_DATE", DbType="DateTime")]
	public System.Nullable<System.DateTime> UPDATE_DATE
	{
		get
		{
			return this._UPDATE_DATE;
		}
		set
		{
			if ((this._UPDATE_DATE != value))
			{
				this.OnUPDATE_DATEChanging(value);
				this.SendPropertyChanging();
				this._UPDATE_DATE = value;
				this.SendPropertyChanged("UPDATE_DATE");
				this.OnUPDATE_DATEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Order", Storage="_Orders", ThisKey="MEMBER_ID", OtherKey="Member_ID")]
	public EntitySet<Order> Orders
	{
		get
		{
			return this._Orders;
		}
		set
		{
			this._Orders.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Family_Member", Storage="_Family", ThisKey="FAMILY_ID", OtherKey="FAMILY_ID", IsForeignKey=true)]
	public Family Family
	{
		get
		{
			return this._Family.Entity;
		}
		set
		{
			Family previousValue = this._Family.Entity;
			if (((previousValue != value) 
						|| (this._Family.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Family.Entity = null;
					previousValue.Members.Remove(this);
				}
				this._Family.Entity = value;
				if ((value != null))
				{
					value.Members.Add(this);
					this._FAMILY_ID = value.FAMILY_ID;
				}
				else
				{
					this._FAMILY_ID = default(Nullable<int>);
				}
				this.SendPropertyChanged("Family");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Orders(Order entity)
	{
		this.SendPropertyChanging();
		entity.Member = this;
	}
	
	private void detach_Orders(Order entity)
	{
		this.SendPropertyChanging();
		entity.Member = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Family")]
public partial class Family : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _FAMILY_ID;
	
	private System.Nullable<char> _PUBLISH;
	
	private string _NAME;
	
	private string _ADDRESS;
	
	private string _CITY;
	
	private string _STATE;
	
	private string _ZIP;
	
	private string _HOME_PHONE;
	
	private string _EMAIL;
	
	private string _FamilyPicture;
	
	private System.Nullable<decimal> _Balance;
	
	private System.Nullable<System.DateTime> _CREATE_DATE;
	
	private System.Nullable<System.DateTime> _UPDATE_DATE;
	
	private EntitySet<Member> _Members;
	
	private EntitySet<DepositHistory> _DepositHistories;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFAMILY_IDChanging(int value);
    partial void OnFAMILY_IDChanged();
    partial void OnPUBLISHChanging(System.Nullable<char> value);
    partial void OnPUBLISHChanged();
    partial void OnNAMEChanging(string value);
    partial void OnNAMEChanged();
    partial void OnADDRESSChanging(string value);
    partial void OnADDRESSChanged();
    partial void OnCITYChanging(string value);
    partial void OnCITYChanged();
    partial void OnSTATEChanging(string value);
    partial void OnSTATEChanged();
    partial void OnZIPChanging(string value);
    partial void OnZIPChanged();
    partial void OnHOME_PHONEChanging(string value);
    partial void OnHOME_PHONEChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    partial void OnFamilyPictureChanging(string value);
    partial void OnFamilyPictureChanged();
    partial void OnBalanceChanging(System.Nullable<decimal> value);
    partial void OnBalanceChanged();
    partial void OnCREATE_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnCREATE_DATEChanged();
    partial void OnUPDATE_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnUPDATE_DATEChanged();
    #endregion
	
	public Family()
	{
		this._Members = new EntitySet<Member>(new Action<Member>(this.attach_Members), new Action<Member>(this.detach_Members));
		this._DepositHistories = new EntitySet<DepositHistory>(new Action<DepositHistory>(this.attach_DepositHistories), new Action<DepositHistory>(this.detach_DepositHistories));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FAMILY_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int FAMILY_ID
	{
		get
		{
			return this._FAMILY_ID;
		}
		set
		{
			if ((this._FAMILY_ID != value))
			{
				this.OnFAMILY_IDChanging(value);
				this.SendPropertyChanging();
				this._FAMILY_ID = value;
				this.SendPropertyChanged("FAMILY_ID");
				this.OnFAMILY_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PUBLISH", DbType="Char(1)")]
	public System.Nullable<char> PUBLISH
	{
		get
		{
			return this._PUBLISH;
		}
		set
		{
			if ((this._PUBLISH != value))
			{
				this.OnPUBLISHChanging(value);
				this.SendPropertyChanging();
				this._PUBLISH = value;
				this.SendPropertyChanged("PUBLISH");
				this.OnPUBLISHChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="NVarChar(80)")]
	public string NAME
	{
		get
		{
			return this._NAME;
		}
		set
		{
			if ((this._NAME != value))
			{
				this.OnNAMEChanging(value);
				this.SendPropertyChanging();
				this._NAME = value;
				this.SendPropertyChanged("NAME");
				this.OnNAMEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADDRESS", DbType="NVarChar(80)")]
	public string ADDRESS
	{
		get
		{
			return this._ADDRESS;
		}
		set
		{
			if ((this._ADDRESS != value))
			{
				this.OnADDRESSChanging(value);
				this.SendPropertyChanging();
				this._ADDRESS = value;
				this.SendPropertyChanged("ADDRESS");
				this.OnADDRESSChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CITY", DbType="NVarChar(80)")]
	public string CITY
	{
		get
		{
			return this._CITY;
		}
		set
		{
			if ((this._CITY != value))
			{
				this.OnCITYChanging(value);
				this.SendPropertyChanging();
				this._CITY = value;
				this.SendPropertyChanged("CITY");
				this.OnCITYChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATE", DbType="NVarChar(2)")]
	public string STATE
	{
		get
		{
			return this._STATE;
		}
		set
		{
			if ((this._STATE != value))
			{
				this.OnSTATEChanging(value);
				this.SendPropertyChanging();
				this._STATE = value;
				this.SendPropertyChanged("STATE");
				this.OnSTATEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZIP", DbType="NVarChar(10)")]
	public string ZIP
	{
		get
		{
			return this._ZIP;
		}
		set
		{
			if ((this._ZIP != value))
			{
				this.OnZIPChanging(value);
				this.SendPropertyChanging();
				this._ZIP = value;
				this.SendPropertyChanged("ZIP");
				this.OnZIPChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOME_PHONE", DbType="VarChar(50)")]
	public string HOME_PHONE
	{
		get
		{
			return this._HOME_PHONE;
		}
		set
		{
			if ((this._HOME_PHONE != value))
			{
				this.OnHOME_PHONEChanging(value);
				this.SendPropertyChanging();
				this._HOME_PHONE = value;
				this.SendPropertyChanged("HOME_PHONE");
				this.OnHOME_PHONEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="VarChar(80)")]
	public string EMAIL
	{
		get
		{
			return this._EMAIL;
		}
		set
		{
			if ((this._EMAIL != value))
			{
				this.OnEMAILChanging(value);
				this.SendPropertyChanging();
				this._EMAIL = value;
				this.SendPropertyChanged("EMAIL");
				this.OnEMAILChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamilyPicture", DbType="VarChar(10)")]
	public string FamilyPicture
	{
		get
		{
			return this._FamilyPicture;
		}
		set
		{
			if ((this._FamilyPicture != value))
			{
				this.OnFamilyPictureChanging(value);
				this.SendPropertyChanging();
				this._FamilyPicture = value;
				this.SendPropertyChanged("FamilyPicture");
				this.OnFamilyPictureChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Balance", DbType="Decimal(8,2)")]
	public System.Nullable<decimal> Balance
	{
		get
		{
			return this._Balance;
		}
		set
		{
			if ((this._Balance != value))
			{
				this.OnBalanceChanging(value);
				this.SendPropertyChanging();
				this._Balance = value;
				this.SendPropertyChanged("Balance");
				this.OnBalanceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATE_DATE", DbType="DateTime")]
	public System.Nullable<System.DateTime> CREATE_DATE
	{
		get
		{
			return this._CREATE_DATE;
		}
		set
		{
			if ((this._CREATE_DATE != value))
			{
				this.OnCREATE_DATEChanging(value);
				this.SendPropertyChanging();
				this._CREATE_DATE = value;
				this.SendPropertyChanged("CREATE_DATE");
				this.OnCREATE_DATEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UPDATE_DATE", DbType="DateTime")]
	public System.Nullable<System.DateTime> UPDATE_DATE
	{
		get
		{
			return this._UPDATE_DATE;
		}
		set
		{
			if ((this._UPDATE_DATE != value))
			{
				this.OnUPDATE_DATEChanging(value);
				this.SendPropertyChanging();
				this._UPDATE_DATE = value;
				this.SendPropertyChanged("UPDATE_DATE");
				this.OnUPDATE_DATEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Family_Member", Storage="_Members", ThisKey="FAMILY_ID", OtherKey="FAMILY_ID")]
	public EntitySet<Member> Members
	{
		get
		{
			return this._Members;
		}
		set
		{
			this._Members.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Family_DepositHistory", Storage="_DepositHistories", ThisKey="FAMILY_ID", OtherKey="Family_ID")]
	public EntitySet<DepositHistory> DepositHistories
	{
		get
		{
			return this._DepositHistories;
		}
		set
		{
			this._DepositHistories.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Members(Member entity)
	{
		this.SendPropertyChanging();
		entity.Family = this;
	}
	
	private void detach_Members(Member entity)
	{
		this.SendPropertyChanging();
		entity.Family = null;
	}
	
	private void attach_DepositHistories(DepositHistory entity)
	{
		this.SendPropertyChanging();
		entity.Family = this;
	}
	
	private void detach_DepositHistories(DepositHistory entity)
	{
		this.SendPropertyChanging();
		entity.Family = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Param")]
public partial class Param
{
	
	private string _PARAM_NAME;
	
	private string _PARAM_VALUE;
	
	public Param()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PARAM_NAME", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string PARAM_NAME
	{
		get
		{
			return this._PARAM_NAME;
		}
		set
		{
			if ((this._PARAM_NAME != value))
			{
				this._PARAM_NAME = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PARAM_VALUE", DbType="NVarChar(100)")]
	public string PARAM_VALUE
	{
		get
		{
			return this._PARAM_VALUE;
		}
		set
		{
			if ((this._PARAM_VALUE != value))
			{
				this._PARAM_VALUE = value;
			}
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DepositHistory")]
public partial class DepositHistory : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _DepositID;
	
	private string _DepositType;
	
	private System.Nullable<int> _Family_ID;
	
	private System.Nullable<decimal> _DepositAmount;
	
	private string _USERNAME;
	
	private System.Nullable<System.DateTime> _CREATE_DATE;
	
	private System.Nullable<System.DateTime> _NOTIFIED_DATE;
	
	private System.Nullable<decimal> _Balance;
	
	private System.Nullable<int> _Member_ID;
	
	private EntityRef<Family> _Family;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDepositIDChanging(int value);
    partial void OnDepositIDChanged();
    partial void OnDepositTypeChanging(string value);
    partial void OnDepositTypeChanged();
    partial void OnFamily_IDChanging(System.Nullable<int> value);
    partial void OnFamily_IDChanged();
    partial void OnDepositAmountChanging(System.Nullable<decimal> value);
    partial void OnDepositAmountChanged();
    partial void OnUSERNAMEChanging(string value);
    partial void OnUSERNAMEChanged();
    partial void OnCREATE_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnCREATE_DATEChanged();
    partial void OnNOTIFIED_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnNOTIFIED_DATEChanged();
    partial void OnBalanceChanging(System.Nullable<decimal> value);
    partial void OnBalanceChanged();
    partial void OnMember_IDChanging(System.Nullable<int> value);
    partial void OnMember_IDChanged();
    #endregion
	
	public DepositHistory()
	{
		this._Family = default(EntityRef<Family>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepositID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int DepositID
	{
		get
		{
			return this._DepositID;
		}
		set
		{
			if ((this._DepositID != value))
			{
				this.OnDepositIDChanging(value);
				this.SendPropertyChanging();
				this._DepositID = value;
				this.SendPropertyChanged("DepositID");
				this.OnDepositIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepositType", DbType="NVarChar(10)")]
	public string DepositType
	{
		get
		{
			return this._DepositType;
		}
		set
		{
			if ((this._DepositType != value))
			{
				this.OnDepositTypeChanging(value);
				this.SendPropertyChanging();
				this._DepositType = value;
				this.SendPropertyChanged("DepositType");
				this.OnDepositTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Family_ID", DbType="Int")]
	public System.Nullable<int> Family_ID
	{
		get
		{
			return this._Family_ID;
		}
		set
		{
			if ((this._Family_ID != value))
			{
				if (this._Family.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnFamily_IDChanging(value);
				this.SendPropertyChanging();
				this._Family_ID = value;
				this.SendPropertyChanged("Family_ID");
				this.OnFamily_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepositAmount", DbType="Decimal(8,2)")]
	public System.Nullable<decimal> DepositAmount
	{
		get
		{
			return this._DepositAmount;
		}
		set
		{
			if ((this._DepositAmount != value))
			{
				this.OnDepositAmountChanging(value);
				this.SendPropertyChanging();
				this._DepositAmount = value;
				this.SendPropertyChanged("DepositAmount");
				this.OnDepositAmountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERNAME", DbType="NVarChar(100)")]
	public string USERNAME
	{
		get
		{
			return this._USERNAME;
		}
		set
		{
			if ((this._USERNAME != value))
			{
				this.OnUSERNAMEChanging(value);
				this.SendPropertyChanging();
				this._USERNAME = value;
				this.SendPropertyChanged("USERNAME");
				this.OnUSERNAMEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATE_DATE", DbType="DateTime")]
	public System.Nullable<System.DateTime> CREATE_DATE
	{
		get
		{
			return this._CREATE_DATE;
		}
		set
		{
			if ((this._CREATE_DATE != value))
			{
				this.OnCREATE_DATEChanging(value);
				this.SendPropertyChanging();
				this._CREATE_DATE = value;
				this.SendPropertyChanged("CREATE_DATE");
				this.OnCREATE_DATEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOTIFIED_DATE", DbType="DateTime")]
	public System.Nullable<System.DateTime> NOTIFIED_DATE
	{
		get
		{
			return this._NOTIFIED_DATE;
		}
		set
		{
			if ((this._NOTIFIED_DATE != value))
			{
				this.OnNOTIFIED_DATEChanging(value);
				this.SendPropertyChanging();
				this._NOTIFIED_DATE = value;
				this.SendPropertyChanged("NOTIFIED_DATE");
				this.OnNOTIFIED_DATEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Balance", DbType="Decimal(8,2)")]
	public System.Nullable<decimal> Balance
	{
		get
		{
			return this._Balance;
		}
		set
		{
			if ((this._Balance != value))
			{
				this.OnBalanceChanging(value);
				this.SendPropertyChanging();
				this._Balance = value;
				this.SendPropertyChanged("Balance");
				this.OnBalanceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Member_ID", DbType="Int")]
	public System.Nullable<int> Member_ID
	{
		get
		{
			return this._Member_ID;
		}
		set
		{
			if ((this._Member_ID != value))
			{
				this.OnMember_IDChanging(value);
				this.SendPropertyChanging();
				this._Member_ID = value;
				this.SendPropertyChanged("Member_ID");
				this.OnMember_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Family_DepositHistory", Storage="_Family", ThisKey="Family_ID", OtherKey="FAMILY_ID", IsForeignKey=true)]
	public Family Family
	{
		get
		{
			return this._Family.Entity;
		}
		set
		{
			Family previousValue = this._Family.Entity;
			if (((previousValue != value) 
						|| (this._Family.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Family.Entity = null;
					previousValue.DepositHistories.Remove(this);
				}
				this._Family.Entity = value;
				if ((value != null))
				{
					value.DepositHistories.Add(this);
					this._Family_ID = value.FAMILY_ID;
				}
				else
				{
					this._Family_ID = default(Nullable<int>);
				}
				this.SendPropertyChanged("Family");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Orders")]
public partial class Order : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _OrderID;
	
	private System.Nullable<int> _Member_ID;
	
	private System.Nullable<System.DateTime> _OrderDate;
	
	private System.Nullable<decimal> _OrderAmount;
	
	private string _USERNAME;
	
	private System.Nullable<System.DateTime> _CREATE_DATE;
	
	private System.Nullable<System.DateTime> _NOTIFIED_DATE;
	
	private System.Nullable<decimal> _Balance;
	
	private EntitySet<OrderDetail> _OrderDetails;
	
	private EntityRef<Member> _Member;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderIDChanging(int value);
    partial void OnOrderIDChanged();
    partial void OnMember_IDChanging(System.Nullable<int> value);
    partial void OnMember_IDChanged();
    partial void OnOrderDateChanging(System.Nullable<System.DateTime> value);
    partial void OnOrderDateChanged();
    partial void OnOrderAmountChanging(System.Nullable<decimal> value);
    partial void OnOrderAmountChanged();
    partial void OnUSERNAMEChanging(string value);
    partial void OnUSERNAMEChanged();
    partial void OnCREATE_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnCREATE_DATEChanged();
    partial void OnNOTIFIED_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnNOTIFIED_DATEChanged();
    partial void OnBalanceChanging(System.Nullable<decimal> value);
    partial void OnBalanceChanged();
    #endregion
	
	public Order()
	{
		this._OrderDetails = new EntitySet<OrderDetail>(new Action<OrderDetail>(this.attach_OrderDetails), new Action<OrderDetail>(this.detach_OrderDetails));
		this._Member = default(EntityRef<Member>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int OrderID
	{
		get
		{
			return this._OrderID;
		}
		set
		{
			if ((this._OrderID != value))
			{
				this.OnOrderIDChanging(value);
				this.SendPropertyChanging();
				this._OrderID = value;
				this.SendPropertyChanged("OrderID");
				this.OnOrderIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Member_ID", DbType="Int")]
	public System.Nullable<int> Member_ID
	{
		get
		{
			return this._Member_ID;
		}
		set
		{
			if ((this._Member_ID != value))
			{
				if (this._Member.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnMember_IDChanging(value);
				this.SendPropertyChanging();
				this._Member_ID = value;
				this.SendPropertyChanged("Member_ID");
				this.OnMember_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderDate", DbType="Date")]
	public System.Nullable<System.DateTime> OrderDate
	{
		get
		{
			return this._OrderDate;
		}
		set
		{
			if ((this._OrderDate != value))
			{
				this.OnOrderDateChanging(value);
				this.SendPropertyChanging();
				this._OrderDate = value;
				this.SendPropertyChanged("OrderDate");
				this.OnOrderDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderAmount", DbType="Decimal(8,2)")]
	public System.Nullable<decimal> OrderAmount
	{
		get
		{
			return this._OrderAmount;
		}
		set
		{
			if ((this._OrderAmount != value))
			{
				this.OnOrderAmountChanging(value);
				this.SendPropertyChanging();
				this._OrderAmount = value;
				this.SendPropertyChanged("OrderAmount");
				this.OnOrderAmountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERNAME", DbType="NVarChar(100)")]
	public string USERNAME
	{
		get
		{
			return this._USERNAME;
		}
		set
		{
			if ((this._USERNAME != value))
			{
				this.OnUSERNAMEChanging(value);
				this.SendPropertyChanging();
				this._USERNAME = value;
				this.SendPropertyChanged("USERNAME");
				this.OnUSERNAMEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATE_DATE", DbType="DateTime")]
	public System.Nullable<System.DateTime> CREATE_DATE
	{
		get
		{
			return this._CREATE_DATE;
		}
		set
		{
			if ((this._CREATE_DATE != value))
			{
				this.OnCREATE_DATEChanging(value);
				this.SendPropertyChanging();
				this._CREATE_DATE = value;
				this.SendPropertyChanged("CREATE_DATE");
				this.OnCREATE_DATEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOTIFIED_DATE", DbType="DateTime")]
	public System.Nullable<System.DateTime> NOTIFIED_DATE
	{
		get
		{
			return this._NOTIFIED_DATE;
		}
		set
		{
			if ((this._NOTIFIED_DATE != value))
			{
				this.OnNOTIFIED_DATEChanging(value);
				this.SendPropertyChanging();
				this._NOTIFIED_DATE = value;
				this.SendPropertyChanged("NOTIFIED_DATE");
				this.OnNOTIFIED_DATEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Balance", DbType="Decimal(8,2)")]
	public System.Nullable<decimal> Balance
	{
		get
		{
			return this._Balance;
		}
		set
		{
			if ((this._Balance != value))
			{
				this.OnBalanceChanging(value);
				this.SendPropertyChanging();
				this._Balance = value;
				this.SendPropertyChanged("Balance");
				this.OnBalanceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_OrderDetail", Storage="_OrderDetails", ThisKey="OrderID", OtherKey="OrderID")]
	public EntitySet<OrderDetail> OrderDetails
	{
		get
		{
			return this._OrderDetails;
		}
		set
		{
			this._OrderDetails.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Order", Storage="_Member", ThisKey="Member_ID", OtherKey="MEMBER_ID", IsForeignKey=true)]
	public Member Member
	{
		get
		{
			return this._Member.Entity;
		}
		set
		{
			Member previousValue = this._Member.Entity;
			if (((previousValue != value) 
						|| (this._Member.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Member.Entity = null;
					previousValue.Orders.Remove(this);
				}
				this._Member.Entity = value;
				if ((value != null))
				{
					value.Orders.Add(this);
					this._Member_ID = value.MEMBER_ID;
				}
				else
				{
					this._Member_ID = default(Nullable<int>);
				}
				this.SendPropertyChanged("Member");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_OrderDetails(OrderDetail entity)
	{
		this.SendPropertyChanging();
		entity.Order = this;
	}
	
	private void detach_OrderDetails(OrderDetail entity)
	{
		this.SendPropertyChanging();
		entity.Order = null;
	}
}
#pragma warning restore 1591
